#include <cstdio>
#include <iostream>
#include <algorithm>
 
using namespace std;
 
int ans;
int D, W, K;
 
int map[13][21];
int v;
 
void dfs(int d, int c) {
    if (c >= ans) return;
    if (d == D) {
        int flag;
 
        for (int n = 0; n < W; n++) {
            flag = 1;
            int cnt = 1, pre = map[0][n];
            for (int m = 1; m < D; m++) {
                if (map[m][n] == pre) {
                    cnt++;
                }
                else {
                    pre = map[m][n];
                    cnt = 1;
                }
 
                if (cnt >= K) {
                    flag = 0;
                    break;
                }
            }
            if (flag) {
                return;
            }
        }
 
        if (ans > c)
            ans = c;
        return;
    }
 
    dfs(d + 1, c);
 
    int t[21];
 
    for (int n = 0; n < W; n++) {
        t[n] = map[d][n];
        map[d][n] = v;
    }
 
    dfs(d + 1, c + 1);
    for (int n = 0; n < W; n++) {
        map[d][n] = t[n];
    }
 
}
 
int main() {
    int T;
    scanf("%d", &T);
 
    for (int testCase = 1; testCase <= T; testCase++) {
        // 입력 ----------------------------------------
        scanf("%d %d %d", &D, &W, &K);
 
        for (int i = 0; i < D; i++) {
            for (int j = 0; j < W; j++) {
                cin >> map[i][j];
            }
        }
 
        ans = K;
        // 완탐 -----------------------------------------
        v = 0;
        dfs(0, 0);
        v = 1;
        dfs(0, 0);
        // 출력 -----------------------------------------
        printf("#%d %d\n", testCase, ans);
    }
 
    return 0;
    }
